This program is a LEDSwitch Server example. It shows you how to control
embedded device from C++ application using TCP/IP connection. This can be
either an ethernet, SLIP or PPP link. This example opens an UDP and TCP 
port for listening and waits for commands coming from PC Client or
another eval-board client application. The commands are used to control
LED diodes to switch them on and off.

In order to run this example, you need to set the network parameters to
match your local area network.

To test this example, run windows application LEDSwitch and type in
the ip address of your Embedded LEDSwitch Server into "Board IP"
edit box. Type also the number of transfer port into "Transfer port"
edit box. Select one of transfer protocol (TCP or UDP). When the P2
value in windows application is changed, this value is send to 
eval-board and the LED on board should set as you specified in windows
application.

The same example can be tested also with another eval-board Client 
connected to the same LAN. 

The LEDSwitch example is available for several targets:

K60N512:
    Standalone application for TWR-K60N512 Board.
    Program code is loaded into on-chip flash.

K60N512 Debug:
    Standalone Debug application. Debug level configured
    in Net_Debug.c debug configuration file.
    Connect a serial cable to RS232 port to view output
    messages using HyperTerminal at 115200 baud,
    8-bits, no parity, 1 stop bit, XON/XOFF.


Jumper settings:
  TWR-K60N512 board, Rev B:
    J6 must connect pins 2 and 3 (CLKIN0 is clock source)

  TWR-SER board, Rev D:
    J3 must connect pins 2 and 3 (Connect CLOCKIN0 to OSC)


Note:
  SW1 will not work on Kinetis chip revision 0M33Z
  Cause: Port pin PTA19 cannot be used as GPIO if external clock
         is used.
