This program is a LEDSwitch Server example. It shows you how to control
embedded device from C++ application using TCP/IP connection. This can be
either an ethernet, SLIP or PPP link. This example opens an UDP and TCP 
port for listening and waits for commands coming from PC Client or
another eval-board client application. The commands are used to control
LED diodes to switch them on and off.

In order to run this example, you need to set the network parameters to
match your local area network.

To test this example, run windows application LEDSwitch and type in
the ip address of your Embedded LEDSwitch Server into "Board IP"
edit box. Type also the number of transfer port into "Transfer port"
edit box. Select one of transfer protocol (TCP or UDP). When the P2
value in windows application is changed, this value is send to 
eval-board and the LED on board should set as you specified in windows
application.

The same example can be tested also with another eval-board Client 
connected to the same LAN. 

The LEDSwitch example is available for several targets:

STM3220G-EVAL:
    Standalone application for STM3220G-EVAL Board.
    Program code is loaded into on-chip flash.

STM3220G-EVAL Debug:
    Standalone Debug application. Debug level configured
    in Net_Debug.c debug configuration file.
    Connect a serial cable to RS232 COM port to view
    output messages using HyperTerminal at 115200 baud,
    8-bits, no parity, 1 stop bit, XON/XOFF.


Jumper settings:
  JP5  must: - Connect pins 1 and 2 to enable external crystal for PHY clock
  JP6  must: - Connect pins 2 and 3 for MII interface
  JP8  must: - Be open for MII interface
  JP22 must: - Connect pins 1 and 2 to enable USART port

Note:
  This example also works on the STM3220F-EVAL board.
