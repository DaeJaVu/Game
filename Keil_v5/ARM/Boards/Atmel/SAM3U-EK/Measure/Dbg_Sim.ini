/*----------------------------------------------------------------------------
 * Name:    Dbg_Sim.ini
 * Purpose: Simulator Debug Initialization File
 * Note(s):
 *----------------------------------------------------------------------------
 * This file is part of the uVision/ARM development tools.
 * This software may only be used under the terms of a valid, current,
 * end user licence from KEIL for a compatible version of KEIL software
 * development tools. Nothing else gives you the right to use this software.
 *
 * This software is supplied "AS IS" without warranties of any kind.
 *
 * Copyright (c) 2008-2011 Keil - An ARM Company. All rights reserved.
 *----------------------------------------------------------------------------*/


/*----------------------------------------------------------------------------
  Simulate Push button USR-LEFT 
    Pins: - USR-LEFT = PA.18
 *----------------------------------------------------------------------------*/
PORTA |= 0x040000;                      // set PA.18 high: Key Input

// debug function for the push button USR-LEFT
signal void push_USR_LEFT (void)  {
  PORTA &= ~0x040000;                   // set PA.18 low  (Key pressed)
  swatch (0.025);                       // wait 25 msec
  PORTA |= 0x040000;                    // set PA.18 high (Key released)
}

/*----------------------------------------------------------------------------
  Simulate Push button USR-RIGHT 
    Pins: - USR-RIGHT = PA.19
 *----------------------------------------------------------------------------*/
PORTA |= 0x080000;                      // set PA.19 high: Key Input

// debug function for the push button USR-RIGHT
signal void push_USR_RIGHT (void)  {
  PORTA &= ~0x080000;                   // set PA.19 low  (Key pressed)
  swatch (0.025);                       // wait 25 msec
  PORTA |= 0x080000;                    // set PA.19 high (Key released)
}

/*----------------------------------------------------------------------------
  Analog()  simulates analog input values given to channel-3 (AD12B)
 *----------------------------------------------------------------------------*/
Signal void Analog (float limit)  {
  float volts;

  AD12BVREF = limit;
  printf ("Analog (%f) entered.\n", limit);

  while (1)  {          /* forever */
    volts = 0;
    while (volts <= limit)  {
      AD12B3 = volts;   /* analog input-2 */
      twatch (500000);  /* 500000 Cycles Time-Break */
      volts += 0.1;     /* increase voltage */
    }
    volts = limit;
    while (volts >= 0.0)  {
      AD12B3 = volts;
      twatch (500000);  /* 500000 Cycles Time-Break */
      volts -= 0.1;     /* decrease voltage */
    }
  }
}


/* define a toolbar buttons */
kill button *
define button "Button USR-LEFT", "push_USR_LEFT ()"
define button "Button USR-RIGHT", "push_USR_RIGHT ()"
define button "Analog 0..3.3V", "Analog(3.3)"
define button "Stop Analog", "signal kill Analog"
